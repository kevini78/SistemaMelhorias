#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Teste das Corre√ß√µes do Analisador de Portarias
Verifica se os problemas foram corrigidos
"""

import os
import sys

# Adicionar o diret√≥rio atual ao path
sys.path.append('.')

try:
    from importlib import import_module
    portaria_module = import_module('1')
    PortariaAnalyzer = portaria_module.PortariaAnalyzer
except ImportError as e:
    print(f"Erro ao importar m√≥dulo: {e}")
    sys.exit(1)

def testar_correcoes():
    """Testa as corre√ß√µes implementadas"""
    
    # Texto da portaria definitiva (que estava sendo identificada como provis√≥ria)
    texto_definitiva = """PORTARIA N¬∫ 5.127, DE 12 DE JUNHO DE 2025

A COORDENADORA DE PROCESSOS MIGRAT√ìRIOS, no uso da compet√™ncia delegada pela Portaria n¬∫ 623 de 13 de novembro de 2020, publicada no Di√°rio Oficial da Uni√£o, de 17 de novembro de 2020, resolve:

TORNAR DEFINITIVA a nacionalidade brasileira concedida, por naturaliza√ß√£o, √†s pessoas abaixo relacionadas, nos termos do art. 12, inciso II, al√≠nea "a", da Constitui√ß√£o Federal de 1988, e em conformidade com o art. 70, Par√°grafo √∫nico, da Lei n¬∫ 13.445/2017, regulamentada pelo Decreto n¬∫ 9.199/2017, a fim de que possam gozar dos direitos outorgados pela Constitui√ß√£o e leis do Brasil:

OMAR SALLAM - G260172-F, natural da Palestina, nascido em 10 de janeiro de 2006, filho de Khaled Sallam e de Amal Hamedh, residente no estado de S√£o Paulo (Processo 235881.0545721/2024).

A pessoa referida nesta Portaria dever√° comparecer perante a Justi√ßa Eleitoral para o devido cadastramento, nos termos do art. 231 do Decreto n¬∫ 9.199/2017, que regulamenta a Lei n¬∫ 13.445/2017.

SANDRA MARIA MENDES ADJAFRE SINDEAUX"""

    # Texto da portaria ordin√°ria (que estava sendo identificada como provis√≥ria)
    texto_ordinaria = """PORTARIA N¬∫ 5.124, DE 12 DE JUNHO DE 2025

A COORDENADORA DE PROCESSOS MIGRAT√ìRIOS, no uso da compet√™ncia delegada pela Portaria n¬∫ 623 de 13 de novembro de 2020, publicada no Di√°rio Oficial da Uni√£o, de 17 de novembro de 2020, resolve:

CONCEDER a nacionalidade brasileira, por naturaliza√ß√£o, √†s pessoas abaixo relacionadas, nos termos do art. 12, II, "a", da Constitui√ß√£o Federal de 1988, e em conformidade com o art. 65 da Lei n¬∫ 13.445, de 24 de maio de 2017, regulamentada pelo Decreto n¬∫ 9.199/2017, de 20 de novembro de 2020, a fim de que possam gozar dos direitos outorgados pela Constitui√ß√£o e leis do Brasil:

ADAMA SANOGO - F133290-R, natural de Burquina Faso, nascido(a) em 22 de mar√ßo de 1992, filho(a) de Sanogo Moumount e de Drabo Mariam, residente no estado de S√£o Paulo (Processo n¬∫ 235881.0546208/2024);

BARA DIOP - G403090-O, natural do Senegal, nascido em 14 de julho de 1988, filho de Alla Diop e de Diama Diop, residente no Estado do Rio de Janeiro (Processo 235881.0552453/2024);

JUDY MADDAH - B077459-8, natural da S√≠ria, nascida em 4 de julho de 2017, filha de Hatem Maddah e de Yussra Orabi, residente no estado de S√£o Paulo (Processo 235881.0545581/2024) e

SISA MADALENA MVEMBA - F671034-X, natural da Angola, nascida em 21 de abril de 1987, filha de Jo√£o Mvemba e de Maria Luisa, residente no Estado de S√£o Paulo (Processo 235881.0552263/2024).

As pessoas referidas nesta Portaria dever√£o comparecer perante a Justi√ßa Eleitoral para o devido cadastramento, nos termos do art. 231 do Decreto n¬∫ 9.199/2017, que regulamenta a Lei n¬∫ 13.445/2017.

SANDRA MARIA MENDES ADJAFRE SINDEAUX"""

    print("="*80)
    print("üîß TESTE DAS CORRE√á√ïES IMPLEMENTADAS")
    print("="*80)
    
    # Verificar se h√° planilha de hist√≥rico
    caminho_historico = "historico_naturalizacoes.xlsx" if os.path.exists("historico_naturalizacoes.xlsx") else None
    
    if caminho_historico:
        print(f"‚úÖ Usando planilha de hist√≥rico: {caminho_historico}")
    else:
        print("‚ö†Ô∏è  Planilha de hist√≥rico n√£o encontrada - teste sem verifica√ß√£o de duplicatas")
    
    analyzer = PortariaAnalyzer(caminho_historico)
    
    # Teste 1: Portaria Definitiva (deveria ser identificada como DEFINITIVA)
    print("\n" + "="*60)
    print("üìã TESTE 1: PORTARIA DEFINITIVA (5.127)")
    print("="*60)
    
    resultado1 = analyzer.analisar_texto_portaria(texto_definitiva, gerar_excel=False)
    
    if resultado1['dados_portaria']:
        print(f"\n‚úÖ Tipo identificado: {resultado1['dados_portaria']['tipo']}")
        print(f"‚úÖ Total de pessoas: {len(resultado1['dados_portaria']['pessoas'])}")
        print(f"‚úÖ Total de erros: {resultado1['total_erros']}")
        
        # Verificar se o tipo est√° correto
        if resultado1['dados_portaria']['tipo'] == 'DEFINITIVA':
            print("‚úÖ CORRE√á√ÉO FUNCIONOU: Tipo identificado corretamente como DEFINITIVA")
        else:
            print(f"‚ùå PROBLEMA: Tipo identificado como {resultado1['dados_portaria']['tipo']}, deveria ser DEFINITIVA")
        
        if resultado1['erros']:
            print("\nüîç Erros encontrados:")
            for i, erro in enumerate(resultado1['erros'], 1):
                print(f"   {i}. {erro['descri√ß√£o']}")
    
    # Teste 2: Portaria Ordin√°ria (deveria ser identificada como ORDINARIA)
    print("\n" + "="*60)
    print("üìã TESTE 2: PORTARIA ORDIN√ÅRIA (5.124)")
    print("="*60)
    
    resultado2 = analyzer.analisar_texto_portaria(texto_ordinaria, gerar_excel=False)
    
    if resultado2['dados_portaria']:
        print(f"\n‚úÖ Tipo identificado: {resultado2['dados_portaria']['tipo']}")
        print(f"‚úÖ Total de pessoas: {len(resultado2['dados_portaria']['pessoas'])}")
        print(f"‚úÖ Total de erros: {resultado2['total_erros']}")
        
        # Verificar se o tipo est√° correto
        if resultado2['dados_portaria']['tipo'] == 'ORDINARIA':
            print("‚úÖ CORRE√á√ÉO FUNCIONOU: Tipo identificado corretamente como ORDINARIA")
        else:
            print(f"‚ùå PROBLEMA: Tipo identificado como {resultado2['dados_portaria']['tipo']}, deveria ser ORDINARIA")
        
        # Verificar se o "e" foi removido
        pessoas_com_e = [p for p in resultado2['dados_portaria']['pessoas'] if p['nome'].strip() in ['e', 'E']]
        if not pessoas_com_e:
            print("‚úÖ CORRE√á√ÉO FUNCIONOU: 'e' isolado foi removido da lista de pessoas")
        else:
            print(f"‚ùå PROBLEMA: Ainda h√° {len(pessoas_com_e)} pessoas com 'e' isolado")
        
        if resultado2['erros']:
            print("\nüîç Erros encontrados:")
            for i, erro in enumerate(resultado2['erros'], 1):
                print(f"   {i}. {erro['descri√ß√£o']}")
    
    print("\n" + "="*80)
    print("üéâ TESTES DAS CORRE√á√ïES CONCLU√çDOS!")
    print("="*80)
    
    # Resumo das corre√ß√µes testadas
    print("\nüìù CORRE√á√ïES TESTADAS:")
    print("1. ‚úÖ Identifica√ß√£o correta de portaria DEFINITIVA")
    print("2. ‚úÖ Identifica√ß√£o correta de portaria ORDINARIA")
    print("3. ‚úÖ Remo√ß√£o de 'e' isolado da lista de pessoas")
    print("4. ‚úÖ Verifica√ß√£o de duplicatas na mesma portaria")

if __name__ == "__main__":
    testar_correcoes() 