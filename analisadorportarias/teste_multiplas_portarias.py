#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Teste de M√∫ltiplas Portarias
Verifica se a separa√ß√£o e an√°lise de m√∫ltiplas portarias est√° funcionando corretamente
"""

import os
import sys

# Adicionar o diret√≥rio atual ao path
sys.path.append('.')

try:
    from importlib import import_module
    portaria_module = import_module('1')
    PortariaAnalyzer = portaria_module.PortariaAnalyzer
except ImportError as e:
    print(f"Erro ao importar m√≥dulo: {e}")
    sys.exit(1)

def testar_multiplas_portarias():
    """Testa a an√°lise de m√∫ltiplas portarias com duplicatas"""
    
    # Texto com 3 portarias diferentes (ordin√°ria, provis√≥ria, definitiva)
    texto_multiplas = """PORTARIA N¬∫ 5.124, DE 12 DE JUNHO DE 2025

A COORDENADORA DE PROCESSOS MIGRAT√ìRIOS, no uso da compet√™ncia delegada pela Portaria n¬∫ 623 de 13 de novembro de 2020, publicada no Di√°rio Oficial da Uni√£o, de 17 de novembro de 2020, resolve:

CONCEDER a nacionalidade brasileira, por naturaliza√ß√£o, √†s pessoas abaixo relacionadas, nos termos do art. 12, II, "a", da Constitui√ß√£o Federal de 1988, e em conformidade com o art. 65 da Lei n¬∫ 13.445, de 24 de maio de 2017, regulamentada pelo Decreto n¬∫ 9.199/2017, de 20 de novembro de 2020, a fim de que possam gozar dos direitos outorgados pela Constitui√ß√£o e leis do Brasil:

ADAMA SANOGO - F133290-R, natural de Burquina Faso, nascido(a) em 22 de mar√ßo de 1992, filho(a) de Sanogo Moumount e de Drabo Mariam, residente no estado de S√£o Paulo (Processo n¬∫ 235881.0546208/2024);

BARA DIOP - G403090-O, natural do Senegal, nascido em 14 de julho de 1988, filho de Alla Diop e de Diama Diop, residente no Estado do Rio de Janeiro (Processo 235881.0552453/2024);

JUDY MADDAH - B077459-8, natural da S√≠ria, nascida em 4 de julho de 2017, filha de Hatem Maddah e de Yussra Orabi, residente no estado de S√£o Paulo (Processo 235881.0545581/2024).

As pessoas referidas nesta Portaria dever√£o comparecer perante a Justi√ßa Eleitoral para o devido cadastramento, nos termos do art. 231 do Decreto n¬∫ 9.199/2017, que regulamenta a Lei n¬∫ 13.445/2017.

SANDRA MARIA MENDES ADJAFRE SINDEAUX

PORTARIA N¬∫ 5.126, DE 12 DE JUNHO DE 2025

A COORDENADORA DE PROCESSOS MIGRAT√ìRIOS, no uso da compet√™ncia delegada pela Portaria n¬∫ 623 de 13 de novembro de 2020, publicada no Di√°rio Oficial da Uni√£o, de 17 de novembro de 2020: resolve:

CONCEDER a nacionalidade brasileira, por Naturaliza√ß√£o Provis√≥ria, √†s pessoas abaixo relacionadas, nos termos do art. 12, inciso II, al√≠nea "a", da Constitui√ß√£o Federal de 1988, e em conformidade com o art. 70 da Lei n¬∫ 13.445, de 24 de maio de 2017, regulamentada pelo Decreto n¬∫ 9.199/2017, de 20 de novembro de 2020, a fim de que possa gozar dos direitos outorgados pela Constitui√ß√£o e leis do Brasil, at√© 2 (dois) anos ap√≥s atingir a maioridade, nos termos do Par√°grafo √∫nico do referido artigo:

CLEETCHY CHOULOUTE - F265158-T, natural do Haiti, nascido em 5 de novembro de 2012, filho de Nesly Chouloute e de Fabienne Decilien, residente no estado de S√£o Paulo (Processo 235881.0554712/2024);

JUDY MADDAH - B077459-8, natural da S√≠ria, nascida em 4 de julho de 2017, filha de Hatem Maddah e de Yussra Orabi, residente no estado de S√£o Paulo (Processo 235881.0545581/2024);

LARIA HAMDAN - F889386-G, natural do L√≠bano, nascida em 9 de novembro de 2019, filha de Rawi Hamdan e de Ayla Farid Saado Kawash, residente no estado de Santa Catarina (Processo 235881.0542302/2024).

SANDRA MARIA MENDES ADJAFRE SINDEAUX

PORTARIA N¬∫ 5.127, DE 12 DE JUNHO DE 2025

A COORDENADORA DE PROCESSOS MIGRAT√ìRIOS, no uso da compet√™ncia delegada pela Portaria n¬∫ 623 de 13 de novembro de 2020, publicada no Di√°rio Oficial da Uni√£o, de 17 de novembro de 2020, resolve:

TORNAR DEFINITIVA a nacionalidade brasileira concedida, por naturaliza√ß√£o, √†s pessoas abaixo relacionadas, nos termos do art. 12, inciso II, al√≠nea "a", da Constitui√ß√£o Federal de 1988, e em conformidade com o art. 70, Par√°grafo √∫nico, da Lei n¬∫ 13.445/2017, regulamentada pelo Decreto n¬∫ 9.199/2017, a fim de que possam gozar dos direitos outorgados pela Constitui√ß√£o e leis do Brasil:

OMAR SALLAM - G260172-F, natural da Palestina, nascido em 10 de janeiro de 2006, filho de Khaled Sallam e de Amal Hamedh, residente no estado de S√£o Paulo (Processo 235881.0545721/2024).

A pessoa referida nesta Portaria dever√° comparecer perante a Justi√ßa Eleitoral para o devido cadastramento, nos termos do art. 231 do Decreto n¬∫ 9.199/2017, que regulamenta a Lei n¬∫ 13.445/2017.

SANDRA MARIA MENDES ADJAFRE SINDEAUX"""

    print("="*80)
    print("üß™ TESTE DE M√öLTIPLAS PORTARIAS")
    print("="*80)
    
    # Verificar se h√° planilha de hist√≥rico
    caminho_historico = "historico_naturalizacoes.xlsx" if os.path.exists("historico_naturalizacoes.xlsx") else None
    
    if caminho_historico:
        print(f"‚úÖ Usando planilha de hist√≥rico: {caminho_historico}")
    else:
        print("‚ö†Ô∏è  Planilha de hist√≥rico n√£o encontrada - teste sem verifica√ß√£o de duplicatas")
    
    analyzer = PortariaAnalyzer(caminho_historico)
    
    print("\nAnalisando texto com m√∫ltiplas portarias...")
    print("-" * 60)
    
    resultados, arquivos_excel = analyzer.analisar_multiplas_portarias(texto_multiplas, gerar_excel=False)
    
    print(f"\nüéâ An√°lise conclu√≠da!")
    print(f"üìä Total de portarias encontradas: {len(resultados)}")
    
    total_erros = sum(r['total_erros'] for r in resultados)
    print(f"üìä Total de erros encontrados: {total_erros}")
    
    # Verificar se encontrou exatamente 3 portarias
    if len(resultados) == 3:
        print("‚úÖ CORRE√á√ÉO FUNCIONOU: Encontrou exatamente 3 portarias")
    else:
        print(f"‚ùå PROBLEMA: Encontrou {len(resultados)} portarias, deveria ser 3")
    
    # Mostrar resultado de cada portaria
    for idx, resultado in enumerate(resultados, 1):
        print(f"\n================ PORTARIA {idx} ================")
        if resultado['dados_portaria']:
            dados = resultado['dados_portaria']
            print(f"Portaria: {dados['numero']}")
            print(f"Data: {dados['data']}")
            print(f"Tipo: {dados['tipo']}")
            print(f"Total de pessoas: {len(dados['pessoas'])}")
            print(f"Total de erros: {resultado['total_erros']}")
            
            # Verificar se o tipo est√° correto
            tipos_esperados = ['ORDINARIA', 'PROVISORIA', 'DEFINITIVA']
            if idx <= len(tipos_esperados) and dados['tipo'] == tipos_esperados[idx-1]:
                print(f"‚úÖ Tipo correto: {dados['tipo']}")
            else:
                print(f"‚ùå Tipo incorreto: {dados['tipo']}, esperado: {tipos_esperados[idx-1] if idx <= len(tipos_esperados) else 'N/A'}")
            
            if resultado['erros']:
                print(f"\nErros encontrados:")
                for i, erro in enumerate(resultado['erros'], 1):
                    print(f"   {i}. {erro['descri√ß√£o']}")
                    
                    # Verificar se h√° erro de duplicata entre portarias
                    if erro['tipo'] == 'DUPLICATA_ENTRE_PORTARIAS':
                        print(f"      ‚úÖ DUPLICATA DETECTADA: {erro['descri√ß√£o']}")
            else:
                print("\n‚úÖ Nenhum erro encontrado!")
        else:
            print("‚ùå N√£o foi poss√≠vel extrair dados desta portaria")
    
    print("\n" + "="*80)
    print("üéâ TESTE CONCLU√çDO!")
    print("="*80)
    
    # Resumo do teste
    print("\nüìù RESUMO DO TESTE:")
    print(f"1. ‚úÖ Portarias encontradas: {len(resultados)}")
    print(f"2. ‚úÖ Total de erros: {total_erros}")
    print("3. ‚úÖ Verifica√ß√£o de duplicatas entre portarias")
    print("4. ‚úÖ Identifica√ß√£o correta dos tipos")

if __name__ == "__main__":
    testar_multiplas_portarias() 