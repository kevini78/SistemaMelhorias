#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Teste da busca autom√°tica usando filtros espec√≠ficos do DOU
Simula o processo manual: PORTARIA + Minist√©rio da Justi√ßa + Portaria + Secretaria Nacional de Justi√ßa
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from busca_automatica_dou import BuscadorAutomaticoDOU

def testar_busca_com_filtros():
    """Testa a busca usando os filtros espec√≠ficos do DOU"""
    print("üîç TESTE DE BUSCA COM FILTROS ESPEC√çFICOS DOU")
    print("=" * 60)
    print("Simulando: PORTARIA + Minist√©rio da Justi√ßa + Portaria + Secretaria Nacional de Justi√ßa")
    print()
    
    buscador = BuscadorAutomaticoDOU()
    
    # Testar anos recentes onde sabemos que existem portarias
    anos_teste = [2024, 2023, 2022, 2021, 2020]
    
    for ano in anos_teste:
        print(f"\nüìÖ Testando ano {ano}")
        print("-" * 40)
        
        try:
            # Usar o novo m√©todo de busca por ano
            arquivo = buscador.buscar_portarias_por_ano(ano)
            
            if arquivo and os.path.exists(arquivo):
                print(f"‚úÖ Sucesso! Arquivo gerado: {arquivo}")
                
                # Ler estat√≠sticas
                import pandas as pd
                df = pd.read_excel(arquivo)
                print(f"üìä Total de registros: {len(df)}")
                
                if not df.empty:
                    print("üìã Amostra dos dados:")
                    print(df.head(2)[['nome', 'pais', 'estado', 'data_portaria']].to_string())
                
                return True  # Encontrou portarias, pode parar
            else:
                print(f"‚ùå Nenhuma portaria encontrada em {ano}")
                
        except Exception as e:
            print(f"‚ùå Erro no ano {ano}: {e}")
    
    return False

def testar_busca_especifica_periodo():
    """Testa busca espec√≠fica em um per√≠odo menor"""
    print("\nüîç TESTE DE BUSCA ESPEC√çFICA EM PER√çODO MENOR")
    print("=" * 60)
    
    buscador = BuscadorAutomaticoDOU()
    
    # Testar per√≠odos menores onde √© mais prov√°vel encontrar portarias
    periodos_teste = [
        ("2024-01-01", "2024-03-31", "Q1 2024"),
        ("2023-10-01", "2023-12-31", "Q4 2023"),
        ("2023-07-01", "2023-09-30", "Q3 2023"),
        ("2023-04-01", "2023-06-30", "Q2 2023"),
        ("2023-01-01", "2023-03-31", "Q1 2023"),
    ]
    
    for data_inicio, data_fim, descricao in periodos_teste:
        print(f"\nüìÖ Testando: {descricao}")
        print(f"   Per√≠odo: {data_inicio} a {data_fim}")
        
        try:
            # Usar busca espec√≠fica
            portarias = buscador.buscar_portarias_especificas(data_inicio, data_fim)
            
            if portarias:
                print(f"   ‚úÖ Encontradas {len(portarias)} portarias")
                
                # Mostrar algumas portarias
                for i, portaria in enumerate(portarias[:2], 1):
                    print(f"      {i}. {portaria['titulo'][:80]}...")
                    print(f"         Data: {portaria['data_publicacao']}")
                
                # Testar an√°lise
                print(f"   üîç Analisando portarias...")
                df = buscador.analisar_portarias_encontradas(portarias)
                
                if not df.empty:
                    print(f"   ‚úÖ Extra√≠dos {len(df)} registros")
                    return True
                else:
                    print(f"   ‚ö†Ô∏è Nenhum dado extra√≠do")
            else:
                print(f"   ‚ùå Nenhuma portaria encontrada")
                
        except Exception as e:
            print(f"   ‚ùå Erro: {e}")
    
    return False

def testar_api_querido_diario():
    """Testa se a API do Querido Di√°rio est√° funcionando"""
    print("\nüîç TESTE DE CONECTIVIDADE COM API")
    print("=" * 60)
    
    import requests
    
    try:
        # Teste simples da API
        url = "https://queridodiario.ok.org.br/api/gazettes"
        params = {
            'start_date': '2024-01-01',
            'end_date': '2024-01-31',
            'keywords': 'PORTARIA',
            'gazettes': 'DOU',
            'size': 10
        }
        
        print("üîó Testando conex√£o com API do Querido Di√°rio...")
        response = requests.get(url, params=params, timeout=10)
        
        if response.status_code == 200:
            dados = response.json()
            print(f"‚úÖ API funcionando! Status: {response.status_code}")
            print(f"üìä Resultados dispon√≠veis: {len(dados.get('results', []))}")
            return True
        else:
            print(f"‚ùå Erro na API: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro de conex√£o: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ TESTE COMPLETO DE BUSCA COM FILTROS")
    print("=" * 60)
    print("Este teste simula o processo manual de busca no DOU")
    print()
    
    # Teste 1: Conectividade
    api_ok = testar_api_querido_diario()
    
    if api_ok:
        # Teste 2: Busca por ano
        sucesso_ano = testar_busca_com_filtros()
        
        if not sucesso_ano:
            # Teste 3: Busca por per√≠odo menor
            testar_busca_especifica_periodo()
    else:
        print("‚ùå API n√£o est√° dispon√≠vel. Verifique sua conex√£o com a internet.")
    
    print("\n‚úÖ Testes conclu√≠dos!")
    print("\nüí° Dicas para melhorar os resultados:")
    print("   ‚Ä¢ Verifique se a API do Querido Di√°rio est√° funcionando")
    print("   ‚Ä¢ Tente per√≠odos menores (trimestres ou meses)")
    print("   ‚Ä¢ Considere que algumas portarias podem n√£o estar indexadas")
    print("   ‚Ä¢ O sistema agora usa filtros espec√≠ficos como no processo manual") 